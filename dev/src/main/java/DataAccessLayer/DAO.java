package DataAccessLayer;

import DTO.CategoryDTO;

import java.sql.*;

public abstract class DAO<T> {
    public final static String idCol="ID";
    protected String tableName;
//@TODO: when inserting daos, pay attention to update association tables as well
    public DAO(String tableName){
        this.tableName=tableName;
    }

    /**
     * Inserts the dto to the database
     * @param dto
     * @return returns the id generated by the database
     */
    public abstract int insert(T dto);

    public abstract int update(T dto);

    protected ResultSet get(String colName,String value,Connection con){
        String SELECT_SQL=String.format("SELECT * FROM %s WHERE %s=%s",tableName,colName,value);
        ResultSet rs=null;
        try {
            Statement stmt= con.createStatement();
            rs=stmt.executeQuery(SELECT_SQL);
        }
        catch (SQLException e){
            e.printStackTrace();
        }
        return rs;
    }

    public int executeQuery(String QUERY){
        int rowsAffected=-1;
        Connection con=Repository.getInstance().connect();
        try {
            Statement stmt=con.createStatement();
            rowsAffected=stmt.executeUpdate(QUERY);
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            Repository.getInstance().closeConnection(con);
        }
        return rowsAffected;
    }

    public int delete(String colName,String value){
        String DELETE_SQL=String.format("Delete From %s WHERE %s=%s",tableName,colName,value);
        int rowsAffected=-1;
        Connection con=Repository.getInstance().connect();
        try {
            //con.createStatement().execute("PRAGMA foreign_keys = ON");
            //@TODO: for some reason fk keys doesn't work
            Statement stmt=con.createStatement();
            rowsAffected=stmt.executeUpdate(DELETE_SQL);
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            Repository.getInstance().closeConnection(con);
        }
        return rowsAffected;
    }

    protected int getInsertedID(Connection con){
        int output=-1;
        try {
            String query=String.format("SELECT seq FROM sqlite_sequence Where name=\"%s\";",tableName);
            Statement stmt= con.createStatement();
            ResultSet rs=stmt.executeQuery(query);
            output=rs.getInt("seq");
        }
        catch (SQLException e){
            e.printStackTrace();
        }
        return output;
    }

    public ResultSet getAll(Connection con){
        String SELECT_SQL=String.format("SELECT * FROM %s",tableName);
        ResultSet rs=null;
        try {
            Statement stmt= con.createStatement();
            rs=stmt.executeQuery(SELECT_SQL);
        }
        catch (SQLException e){
            e.printStackTrace();
        }
        return rs;
    }


    protected ResultSet selectQuerry(Connection con, String query) {
        ResultSet rs=null;
        try {
            Statement stmt= con.createStatement();
            rs=stmt.executeQuery(query);
        }
        catch (SQLException e){
            e.printStackTrace();
        }
        return rs;
    }
}
